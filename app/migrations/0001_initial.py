# Generated by Django 5.0.7 on 2024-11-28 13:44

import django.contrib.auth.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Clothes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('size', models.CharField(choices=[('50~60', '50~60'), ('70', '70'), ('80', '80'), ('90', '90'), ('100', '100'), ('110', '110'), ('120', '120'), ('130', '130'), ('140', '140')], max_length=10)),
                ('genre', models.CharField(choices=[('tops', 'トップス'), ('skirts', 'スカート'), ('outer', 'アウター'), ('onepiece', 'ワンピース'), ('pants', 'パンツ'), ('hat', '帽子'), ('maternity', 'マタニティ'), ('baby', 'ベビー'), ('other', 'その他')], max_length=20)),
                ('gender', models.CharField(choices=[('Male', '男性'), ('Female', '女性'), ('Other', 'その他')], default='Unisex', max_length=10)),
                ('color', models.CharField(choices=[('white', '白'), ('black', '黒'), ('gray', 'グレー'), ('brown', '茶'), ('beige', 'ベージュ'), ('green', '緑'), ('blue', '青'), ('purple', '紫'), ('yellow', '黄'), ('pink', 'ピンク'), ('red', '赤'), ('orange', 'オレンジ'), ('other', 'その他')], max_length=10)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('memo', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='clothes_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Hashtag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='items/images/')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='WishlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='wishlist_images/default.png', null=True, upload_to='wishlist_images/')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('brand', models.CharField(blank=True, max_length=50)),
                ('product_url', models.URLField(blank=True, max_length=255)),
                ('notes', models.TextField(blank=True, max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='posts/images/')),
                ('title', models.CharField(default='Untitled', max_length=50)),
                ('caption', models.TextField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('items', models.ManyToManyField(blank=True, to='app.item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.user')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('name', models.CharField(max_length=100)),
                ('account', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('male', '男性'), ('female', '女性')], max_length=10)),
                ('birth_of_date', models.DateField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.user')),
            ],
        ),
    ]
